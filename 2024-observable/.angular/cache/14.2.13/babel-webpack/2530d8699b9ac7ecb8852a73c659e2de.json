{"ast":null,"code":"import { root } from '../../util/root';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\n\nfunction getCORSRequest() {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else if (!!root.XDomainRequest) {\n    return new root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\n\nfunction getXMLHttpRequest() {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else {\n    let progId;\n\n    try {\n      const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n\n      for (let i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n\n          if (new root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {}\n      }\n\n      return new root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\n\nexport function ajaxGet(url, headers = null) {\n  return new AjaxObservable({\n    method: 'GET',\n    url,\n    headers\n  });\n}\nexport function ajaxPost(url, body, headers) {\n  return new AjaxObservable({\n    method: 'POST',\n    url,\n    body,\n    headers\n  });\n}\nexport function ajaxDelete(url, headers) {\n  return new AjaxObservable({\n    method: 'DELETE',\n    url,\n    headers\n  });\n}\nexport function ajaxPut(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PUT',\n    url,\n    body,\n    headers\n  });\n}\nexport function ajaxPatch(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PATCH',\n    url,\n    body,\n    headers\n  });\n}\nconst mapResponse = map((x, index) => x.response);\nexport function ajaxGetJSON(url, headers) {\n  return mapResponse(new AjaxObservable({\n    method: 'GET',\n    url,\n    responseType: 'json',\n    headers\n  }));\n}\nexport class AjaxObservable extends Observable {\n  constructor(urlOrRequest) {\n    super();\n    const request = {\n      async: true,\n      createXHR: function () {\n        return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n      },\n      crossDomain: true,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (const prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n\n    this.request = request;\n  }\n\n  _subscribe(subscriber) {\n    return new AjaxSubscriber(subscriber, this.request);\n  }\n\n}\n\nAjaxObservable.create = (() => {\n  const create = urlOrRequest => {\n    return new AjaxObservable(urlOrRequest);\n  };\n\n  create.get = ajaxGet;\n  create.post = ajaxPost;\n  create.delete = ajaxDelete;\n  create.put = ajaxPut;\n  create.patch = ajaxPatch;\n  create.getJSON = ajaxGetJSON;\n  return create;\n})();\n\nexport class AjaxSubscriber extends Subscriber {\n  constructor(destination, request) {\n    super(destination);\n    this.request = request;\n    this.done = false;\n    const headers = request.headers = request.headers || {};\n\n    if (!request.crossDomain && !this.getHeader(headers, 'X-Requested-With')) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    }\n\n    let contentTypeHeader = this.getHeader(headers, 'Content-Type');\n\n    if (!contentTypeHeader && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    request.body = this.serializeBody(request.body, this.getHeader(request.headers, 'Content-Type'));\n    this.send();\n  }\n\n  next(e) {\n    this.done = true;\n    const {\n      xhr,\n      request,\n      destination\n    } = this;\n    let result;\n\n    try {\n      result = new AjaxResponse(e, xhr, request);\n    } catch (err) {\n      return destination.error(err);\n    }\n\n    destination.next(result);\n  }\n\n  send() {\n    const {\n      request,\n      request: {\n        user,\n        method,\n        url,\n        async,\n        password,\n        headers,\n        body\n      }\n    } = this;\n\n    try {\n      const xhr = this.xhr = request.createXHR();\n      this.setupEvents(xhr, request);\n\n      if (user) {\n        xhr.open(method, url, async, user, password);\n      } else {\n        xhr.open(method, url, async);\n      }\n\n      if (async) {\n        xhr.timeout = request.timeout;\n        xhr.responseType = request.responseType;\n      }\n\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = !!request.withCredentials;\n      }\n\n      this.setHeaders(xhr, headers);\n\n      if (body) {\n        xhr.send(body);\n      } else {\n        xhr.send();\n      }\n    } catch (err) {\n      this.error(err);\n    }\n  }\n\n  serializeBody(body, contentType) {\n    if (!body || typeof body === 'string') {\n      return body;\n    } else if (root.FormData && body instanceof root.FormData) {\n      return body;\n    }\n\n    if (contentType) {\n      const splitIndex = contentType.indexOf(';');\n\n      if (splitIndex !== -1) {\n        contentType = contentType.substring(0, splitIndex);\n      }\n    }\n\n    switch (contentType) {\n      case 'application/x-www-form-urlencoded':\n        return Object.keys(body).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(body[key])}`).join('&');\n\n      case 'application/json':\n        return JSON.stringify(body);\n\n      default:\n        return body;\n    }\n  }\n\n  setHeaders(xhr, headers) {\n    for (let key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  }\n\n  getHeader(headers, headerName) {\n    for (let key in headers) {\n      if (key.toLowerCase() === headerName.toLowerCase()) {\n        return headers[key];\n      }\n    }\n\n    return undefined;\n  }\n\n  setupEvents(xhr, request) {\n    const progressSubscriber = request.progressSubscriber;\n\n    function xhrTimeout(e) {\n      const {\n        subscriber,\n        progressSubscriber,\n        request\n      } = xhrTimeout;\n\n      if (progressSubscriber) {\n        progressSubscriber.error(e);\n      }\n\n      let error;\n\n      try {\n        error = new AjaxTimeoutError(this, request);\n      } catch (err) {\n        error = err;\n      }\n\n      subscriber.error(error);\n    }\n\n    xhr.ontimeout = xhrTimeout;\n    xhrTimeout.request = request;\n    xhrTimeout.subscriber = this;\n    xhrTimeout.progressSubscriber = progressSubscriber;\n\n    if (xhr.upload && 'withCredentials' in xhr) {\n      if (progressSubscriber) {\n        let xhrProgress;\n\n        xhrProgress = function (e) {\n          const {\n            progressSubscriber\n          } = xhrProgress;\n          progressSubscriber.next(e);\n        };\n\n        if (root.XDomainRequest) {\n          xhr.onprogress = xhrProgress;\n        } else {\n          xhr.upload.onprogress = xhrProgress;\n        }\n\n        xhrProgress.progressSubscriber = progressSubscriber;\n      }\n\n      let xhrError;\n\n      xhrError = function (e) {\n        const {\n          progressSubscriber,\n          subscriber,\n          request\n        } = xhrError;\n\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n\n        let error;\n\n        try {\n          error = new AjaxError('ajax error', this, request);\n        } catch (err) {\n          error = err;\n        }\n\n        subscriber.error(error);\n      };\n\n      xhr.onerror = xhrError;\n      xhrError.request = request;\n      xhrError.subscriber = this;\n      xhrError.progressSubscriber = progressSubscriber;\n    }\n\n    function xhrReadyStateChange(e) {\n      return;\n    }\n\n    xhr.onreadystatechange = xhrReadyStateChange;\n    xhrReadyStateChange.subscriber = this;\n    xhrReadyStateChange.progressSubscriber = progressSubscriber;\n    xhrReadyStateChange.request = request;\n\n    function xhrLoad(e) {\n      const {\n        subscriber,\n        progressSubscriber,\n        request\n      } = xhrLoad;\n\n      if (this.readyState === 4) {\n        let status = this.status === 1223 ? 204 : this.status;\n        let response = this.responseType === 'text' ? this.response || this.responseText : this.response;\n\n        if (status === 0) {\n          status = response ? 200 : 0;\n        }\n\n        if (status < 400) {\n          if (progressSubscriber) {\n            progressSubscriber.complete();\n          }\n\n          subscriber.next(e);\n          subscriber.complete();\n        } else {\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n\n          let error;\n\n          try {\n            error = new AjaxError('ajax error ' + status, this, request);\n          } catch (err) {\n            error = err;\n          }\n\n          subscriber.error(error);\n        }\n      }\n    }\n\n    xhr.onload = xhrLoad;\n    xhrLoad.subscriber = this;\n    xhrLoad.progressSubscriber = progressSubscriber;\n    xhrLoad.request = request;\n  }\n\n  unsubscribe() {\n    const {\n      done,\n      xhr\n    } = this;\n\n    if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n      xhr.abort();\n    }\n\n    super.unsubscribe();\n  }\n\n}\nexport class AjaxResponse {\n  constructor(originalEvent, xhr, request) {\n    this.originalEvent = originalEvent;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n\n}\n\nconst AjaxErrorImpl = (() => {\n  function AjaxErrorImpl(message, xhr, request) {\n    Error.call(this);\n    this.message = message;\n    this.name = 'AjaxError';\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n    return this;\n  }\n\n  AjaxErrorImpl.prototype = Object.create(Error.prototype);\n  return AjaxErrorImpl;\n})();\n\nexport const AjaxError = AjaxErrorImpl;\n\nfunction parseJson(xhr) {\n  if ('response' in xhr) {\n    return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n  } else {\n    return JSON.parse(xhr.responseText || 'null');\n  }\n}\n\nfunction parseXhrResponse(responseType, xhr) {\n  switch (responseType) {\n    case 'json':\n      return parseJson(xhr);\n\n    case 'xml':\n      return xhr.responseXML;\n\n    case 'text':\n    default:\n      return 'response' in xhr ? xhr.response : xhr.responseText;\n  }\n}\n\nfunction AjaxTimeoutErrorImpl(xhr, request) {\n  AjaxError.call(this, 'ajax timeout', xhr, request);\n  this.name = 'AjaxTimeoutError';\n  return this;\n}\n\nexport const AjaxTimeoutError = AjaxTimeoutErrorImpl;","map":{"version":3,"names":["root","Observable","Subscriber","map","getCORSRequest","XMLHttpRequest","XDomainRequest","Error","getXMLHttpRequest","progId","progIds","i","ActiveXObject","e","ajaxGet","url","headers","AjaxObservable","method","ajaxPost","body","ajaxDelete","ajaxPut","ajaxPatch","mapResponse","x","index","response","ajaxGetJSON","responseType","constructor","urlOrRequest","request","async","createXHR","crossDomain","withCredentials","timeout","prop","hasOwnProperty","_subscribe","subscriber","AjaxSubscriber","create","get","post","delete","put","patch","getJSON","destination","done","getHeader","contentTypeHeader","FormData","serializeBody","send","next","xhr","result","AjaxResponse","err","error","user","password","setupEvents","open","setHeaders","contentType","splitIndex","indexOf","substring","Object","keys","key","encodeURIComponent","join","JSON","stringify","setRequestHeader","headerName","toLowerCase","undefined","progressSubscriber","xhrTimeout","AjaxTimeoutError","ontimeout","upload","xhrProgress","onprogress","xhrError","AjaxError","onerror","xhrReadyStateChange","onreadystatechange","xhrLoad","readyState","status","responseText","complete","onload","unsubscribe","abort","originalEvent","parseXhrResponse","AjaxErrorImpl","message","call","name","prototype","parseJson","parse","responseXML","AjaxTimeoutErrorImpl"],"sources":["C:/Users/arkol/Source/Repos/Temp/Angular/2024-observable/node_modules/rxjs/_esm2015/internal/observable/dom/AjaxObservable.js"],"sourcesContent":["import { root } from '../../util/root';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else {\n        let progId;\n        try {\n            const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (let i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nexport function ajaxGet(url, headers = null) {\n    return new AjaxObservable({ method: 'GET', url, headers });\n}\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url, body, headers });\n}\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url, headers });\n}\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url, body, headers });\n}\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url, body, headers });\n}\nconst mapResponse = map((x, index) => x.response);\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url,\n        responseType: 'json',\n        headers\n    }));\n}\nexport class AjaxObservable extends Observable {\n    constructor(urlOrRequest) {\n        super();\n        const request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n            },\n            crossDomain: true,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (const prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    _subscribe(subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    }\n}\nAjaxObservable.create = (() => {\n    const create = (urlOrRequest) => {\n        return new AjaxObservable(urlOrRequest);\n    };\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n})();\nexport class AjaxSubscriber extends Subscriber {\n    constructor(destination, request) {\n        super(destination);\n        this.request = request;\n        this.done = false;\n        const headers = request.headers = request.headers || {};\n        if (!request.crossDomain && !this.getHeader(headers, 'X-Requested-With')) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        let contentTypeHeader = this.getHeader(headers, 'Content-Type');\n        if (!contentTypeHeader && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        request.body = this.serializeBody(request.body, this.getHeader(request.headers, 'Content-Type'));\n        this.send();\n    }\n    next(e) {\n        this.done = true;\n        const { xhr, request, destination } = this;\n        let result;\n        try {\n            result = new AjaxResponse(e, xhr, request);\n        }\n        catch (err) {\n            return destination.error(err);\n        }\n        destination.next(result);\n    }\n    send() {\n        const { request, request: { user, method, url, async, password, headers, body } } = this;\n        try {\n            const xhr = this.xhr = request.createXHR();\n            this.setupEvents(xhr, request);\n            if (user) {\n                xhr.open(method, url, async, user, password);\n            }\n            else {\n                xhr.open(method, url, async);\n            }\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            this.setHeaders(xhr, headers);\n            if (body) {\n                xhr.send(body);\n            }\n            else {\n                xhr.send();\n            }\n        }\n        catch (err) {\n            this.error(err);\n        }\n    }\n    serializeBody(body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            const splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(body[key])}`).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    }\n    setHeaders(xhr, headers) {\n        for (let key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    }\n    getHeader(headers, headerName) {\n        for (let key in headers) {\n            if (key.toLowerCase() === headerName.toLowerCase()) {\n                return headers[key];\n            }\n        }\n        return undefined;\n    }\n    setupEvents(xhr, request) {\n        const progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            const { subscriber, progressSubscriber, request } = xhrTimeout;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            let error;\n            try {\n                error = new AjaxTimeoutError(this, request);\n            }\n            catch (err) {\n                error = err;\n            }\n            subscriber.error(error);\n        }\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                let xhrProgress;\n                xhrProgress = function (e) {\n                    const { progressSubscriber } = xhrProgress;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress;\n                }\n                xhrProgress.progressSubscriber = progressSubscriber;\n            }\n            let xhrError;\n            xhrError = function (e) {\n                const { progressSubscriber, subscriber, request } = xhrError;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                let error;\n                try {\n                    error = new AjaxError('ajax error', this, request);\n                }\n                catch (err) {\n                    error = err;\n                }\n                subscriber.error(error);\n            };\n            xhr.onerror = xhrError;\n            xhrError.request = request;\n            xhrError.subscriber = this;\n            xhrError.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            return;\n        }\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n        function xhrLoad(e) {\n            const { subscriber, progressSubscriber, request } = xhrLoad;\n            if (this.readyState === 4) {\n                let status = this.status === 1223 ? 204 : this.status;\n                let response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                if (status === 0) {\n                    status = response ? 200 : 0;\n                }\n                if (status < 400) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    let error;\n                    try {\n                        error = new AjaxError('ajax error ' + status, this, request);\n                    }\n                    catch (err) {\n                        error = err;\n                    }\n                    subscriber.error(error);\n                }\n            }\n        }\n        xhr.onload = xhrLoad;\n        xhrLoad.subscriber = this;\n        xhrLoad.progressSubscriber = progressSubscriber;\n        xhrLoad.request = request;\n    }\n    unsubscribe() {\n        const { done, xhr } = this;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        super.unsubscribe();\n    }\n}\nexport class AjaxResponse {\n    constructor(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n}\nconst AjaxErrorImpl = (() => {\n    function AjaxErrorImpl(message, xhr, request) {\n        Error.call(this);\n        this.message = message;\n        this.name = 'AjaxError';\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n        return this;\n    }\n    AjaxErrorImpl.prototype = Object.create(Error.prototype);\n    return AjaxErrorImpl;\n})();\nexport const AjaxError = AjaxErrorImpl;\nfunction parseJson(xhr) {\n    if ('response' in xhr) {\n        return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n    }\n    else {\n        return JSON.parse(xhr.responseText || 'null');\n    }\n}\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            return parseJson(xhr);\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\nfunction AjaxTimeoutErrorImpl(xhr, request) {\n    AjaxError.call(this, 'ajax timeout', xhr, request);\n    this.name = 'AjaxTimeoutError';\n    return this;\n}\nexport const AjaxTimeoutError = AjaxTimeoutErrorImpl;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}